{
    "version": "https://jsonfeed.org/version/1",
    "title": "Asko",
    "home_page_url": "https://soulyi.io/",
    "feed_url": "https://soulyi.io/feed.json",
    "description": "Simple and minimalistic jekyll blogging theme.",
    "icon": "https://soulyi.io/apple-touch-icon.png",
    "favicon": "https://soulyi.io/favicon.ico",
    "expired": false,
    
    "author": "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}",
    
"items": [
    
        {
            "id": "https://soulyi.io/2021/04/17/how-to-translate",
            "title": "기술 문서 번역하기",
            "summary": "번역할때 어떤 과정을 거칠까?",
            "content_text": "저는 다양한 기술 문서들과, 유튜브 영상들을 취미로 번역해 오고 있었습니다. 하지만 최근 uBlock Origin의 문서를 번역하던중, 체계적인 틀이 존재하지 않는것 같아서 이번 기회에 정리해보게 되었습니다.작년 hacktoberfest seoul에서 이보라님께서 발표해주신 세션 4: 다르지만 같은 번역 리뷰, 코드 리뷰 (이보라) 를 중심으로 내용을 작성했습니다.번역 원칙제가 번역을 진행하면서 생각한 점들을 정리해 보았습니다.유동적 번역번역체 어투를 피하기 위해선, 영어 그대로가 아닌, 한국어로 글을 쓴다 라는 생각을 갖고 새로 작성하는것처럼 생각해야 합니다뜻을 살리는 번역위의 유동적 번역과 같은 맥락의 말 인데요, 과연 이 글을 쓴 사람은 무슨 의도를 갖고 작성했을지 생각해보며 번역 해야 합니다.번역 사용자 타게팅이 글을 읽는 독자들의 수준을 고려해서, 기술적 내용은 적당히 의역하거나, 전문가 집단이라면 그대로 쓸수도 있습니다번역 방법다시 본론으로 돌아가 방법론적 이야기를 해보겠습니다.번역가가 종종 저지르는 실수  번역체  오탈자  기본적 맞춤법  동의어 반복팁번역은 단어-단어 수준으로 정확하지 않아도 됨. 오역이 없고 번역투가 없는 문장이면 충분함. 다만, 번역시 누락이 일어나면 안됨.문장 끝(:)이나 문장 맨 앞 (...)같이 영어에서만 사용되는 문장 부호도 최대한 번역해야함.출처번역 툴CATCAT(Computer-assisted translation) 툴을 사용하면 가장 좋지만, 작은 프로젝트의 경우 CAT의 사용이 오히려 cost를 증가 시킬수 있습니다.작은 프로젝트의 경우 자주 사용되는 용어를 통일할수 있도록 하는 일이 필요한데요, 저의 경우 VSCode의 창 분할 기능으로 대신합니다.맞춤법 검사맞춤법 검사기용어 번역마이크로 소프트 용어집한글라이즈국립국어원 한국어 어문 규범번역 레퍼런스React JS 번역 best practise",
            "content_html": "<p>저는 다양한 기술 문서들과, 유튜브 영상들을 취미로 번역해 오고 있었습니다. 하지만 최근 uBlock Origin의 문서를 번역하던중, 체계적인 틀이 존재하지 않는것 같아서 이번 기회에 정리해보게 되었습니다.</p><p>작년 hacktoberfest seoul에서 이보라님께서 발표해주신 <a href=\"https://www.youtube.com/watch?v=K_al26a9R0c\">세션 4: 다르지만 같은 번역 리뷰, 코드 리뷰 (이보라)</a> 를 중심으로 내용을 작성했습니다.</p><h2 id=\"번역-원칙\">번역 원칙</h2><p>제가 번역을 진행하면서 생각한 점들을 정리해 보았습니다.</p><h3 id=\"유동적-번역\">유동적 번역</h3><p>번역체 어투를 피하기 위해선, 영어 그대로가 아닌, <em>한국어로 글을 쓴다</em> 라는 생각을 갖고 새로 작성하는것처럼 생각해야 합니다</p><h3 id=\"뜻을-살리는-번역\">뜻을 살리는 번역</h3><p>위의 유동적 번역과 같은 맥락의 말 인데요, 과연 이 글을 쓴 사람은 무슨 의도를 갖고 작성했을지 생각해보며 번역 해야 합니다.</p><h3 id=\"번역-사용자-타게팅\">번역 사용자 타게팅</h3><p>이 글을 읽는 독자들의 수준을 고려해서, 기술적 내용은 적당히 의역하거나, 전문가 집단이라면 그대로 쓸수도 있습니다</p><h2 id=\"번역-방법\">번역 방법</h2><p>다시 본론으로 돌아가 방법론적 이야기를 해보겠습니다.</p><h3 id=\"번역가가-종종-저지르는-실수\">번역가가 종종 저지르는 실수</h3><ul>  <li>번역체</li>  <li>오탈자</li>  <li>기본적 맞춤법</li>  <li>동의어 반복</li></ul><h3 id=\"팁\">팁</h3><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>번역은 단어-단어 수준으로 정확하지 않아도 됨. 오역이 없고 번역투가 없는 문장이면 충분함. 다만, 번역시 누락이 일어나면 안됨.문장 끝(:)이나 문장 맨 앞 (...)같이 영어에서만 사용되는 문장 부호도 최대한 번역해야함.</code></pre></div></div><p><a href=\"https://github.com/javascript-tutorial/ko.javascript.info/blob/master/CONTRIBUTING.md\">출처</a></p><h3 id=\"번역-툴\">번역 툴</h3><h4 id=\"cat\">CAT</h4><p>CAT(Computer-assisted translation) 툴을 사용하면 가장 좋지만, 작은 프로젝트의 경우 CAT의 사용이 오히려 cost를 증가 시킬수 있습니다.</p><p>작은 프로젝트의 경우 자주 사용되는 용어를 통일할수 있도록 하는 일이 필요한데요, 저의 경우 VSCode의 창 분할 기능으로 대신합니다.</p><h4 id=\"맞춤법-검사\">맞춤법 검사</h4><p><a href=\"http://speller.cs.pusan.ac.kr/\">맞춤법 검사기</a></p><h3 id=\"용어-번역\">용어 번역</h3><p><a href=\"https://www.microsoft.com/en-us/language/Search\">마이크로 소프트 용어집</a><a href=\"https://hangulize.org/\">한글라이즈</a><a href=\"https://kornorms.korean.go.kr//example/exampleList.do\">국립국어원 한국어 어문 규범</a></p><h3 id=\"번역-레퍼런스\">번역 레퍼런스</h3><p><a href=\"https://github.com/reactjs/ko.reactjs.org/wiki/Best-practices-for-translation\">React JS 번역 best practise</a></p>",
            "url": "https://soulyi.io/2021/04/17/how-to-translate",
            
            
            
            
            
            "date_published": "2021-04-17T00:00:00+00:00",
            "date_modified": "2021-04-17T00:00:00+00:00",
            
                "author": 
                "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}"
                
            
        },
    
        {
            "id": "https://soulyi.io/2021/03/31/ap-calculus-2",
            "title": "ap 미적분 정리 (2)",
            "summary": "ap 미적분 정리 (2)",
            "content_text": "용어 정리            word      뜻                  specify      구체화              tolerance      오차              continuity      연속              algebra      대수              imply      성립하다              derivatives      미분계수, 도함수      기호 정리            phrases      뜻                  \\(\\forall\\)      for all, for any              \\(\\exists\\)      there exist              \\(\\owns\\)      such that, so that              \\(\\mathbb{R}\\)      real numbers      증명  귀류법 : 반례를 이용한, 간접 증명임의의 실수에 0을 곱하면 0이다증명조건 \\(\\forall m \\in \\mathbb{R}\\) 일때,\\[m \\cdot 0 = m(0 + 0) = m \\cdot 0 + m \\cdot 0\\]0으로 나눌수 없다증명 (1)귀류법을 사용해서조건 \\(\\forall m \\in \\mathbb{R}\\) 일때,\\[\\frac{b}{a} = \\frac{b + a}{a} = \\frac{b}{a} + 1\\]\\[\\frac{b}{a} = k\\]\\[\\frac{b}{a} + 1 = k\\]\\(k \\neq k\\) 이므로 모순입니다증명 (2)\\[1 \\cdot 0 = 0\\]\\[2 \\cdot 0 = 0\\]\\[3 \\cdot 0 = 0\\]\\[...\\]0으로 나눌수 있다고 가정을 하면\\[1 = \\frac{0}{0}\\]\\[2 = \\frac{0}{0}\\]\\[3 = \\frac{0}{0}\\]\\(1 \\neq 2 \\neq 3\\) 이므로 모순입니다\\(\\varepsilon - \\delta\\) 논법\\[\\displaystyle{\\lim_{x \\to c} f(x) = L}\\]을 증명하는 방법에 대해 이야기 해보겠습니다기본 원리극한의 엄밀한 정리를 위해서는 \\(\\displaystyle{\\lim_{x \\to c} f(x) = L}\\) 이 \\(c\\)에 ‘충분히 가까운’ \\(x\\)를 선택했을때 \\(f(x)\\) 와 \\(L\\) 의 거리가 ‘선택한만큼 작은’ 값을 가져야합니다.  Thomas’ Calculus정의조건\\[\\forall \\varepsilon &gt; 0\\]\\[\\owns \\delta = \\delta(\\varepsilon) &gt; 0\\]일때\\[\\left| x - c \\right| &lt; \\delta \\Longrightarrow \\left| f(x) - c \\right| &lt; \\varepsilon\\]입니다.",
            "content_html": "<h1 id=\"용어-정리\">용어 정리</h1><table>  <thead>    <tr>      <th style=\"text-align: left\">word</th>      <th style=\"text-align: left\">뜻</th>    </tr>  </thead>  <tbody>    <tr>      <td style=\"text-align: left\">specify</td>      <td style=\"text-align: left\">구체화</td>    </tr>    <tr>      <td style=\"text-align: left\">tolerance</td>      <td style=\"text-align: left\">오차</td>    </tr>    <tr>      <td style=\"text-align: left\">continuity</td>      <td style=\"text-align: left\">연속</td>    </tr>    <tr>      <td style=\"text-align: left\">algebra</td>      <td style=\"text-align: left\">대수</td>    </tr>    <tr>      <td style=\"text-align: left\">imply</td>      <td style=\"text-align: left\">성립하다</td>    </tr>    <tr>      <td style=\"text-align: left\">derivatives</td>      <td style=\"text-align: left\">미분계수, 도함수</td>    </tr>  </tbody></table><h1 id=\"기호-정리\">기호 정리</h1><table>  <thead>    <tr>      <th style=\"text-align: left\">phrases</th>      <th style=\"text-align: left\">뜻</th>    </tr>  </thead>  <tbody>    <tr>      <td style=\"text-align: left\">\\(\\forall\\)</td>      <td style=\"text-align: left\">for all, for any</td>    </tr>    <tr>      <td style=\"text-align: left\">\\(\\exists\\)</td>      <td style=\"text-align: left\">there exist</td>    </tr>    <tr>      <td style=\"text-align: left\">\\(\\owns\\)</td>      <td style=\"text-align: left\">such that, so that</td>    </tr>    <tr>      <td style=\"text-align: left\">\\(\\mathbb{R}\\)</td>      <td style=\"text-align: left\">real numbers</td>    </tr>  </tbody></table><h1 id=\"증명\">증명</h1><ul>  <li>귀류법 : 반례를 이용한, 간접 증명</li></ul><h2 id=\"임의의-실수에-0을-곱하면-0이다\">임의의 실수에 0을 곱하면 0이다</h2><h3 id=\"증명-1\">증명</h3><p>조건 \\(\\forall m \\in \\mathbb{R}\\) 일때,</p>\\[m \\cdot 0 = m(0 + 0) = m \\cdot 0 + m \\cdot 0\\]<h2 id=\"0으로-나눌수-없다\">0으로 나눌수 없다</h2><h3 id=\"증명-1\">증명 (1)</h3><p>귀류법을 사용해서</p><p>조건 \\(\\forall m \\in \\mathbb{R}\\) 일때,</p>\\[\\frac{b}{a} = \\frac{b + a}{a} = \\frac{b}{a} + 1\\]\\[\\frac{b}{a} = k\\]\\[\\frac{b}{a} + 1 = k\\]<p>\\(k \\neq k\\) 이므로 모순입니다</p><h3 id=\"증명-2\">증명 (2)</h3>\\[1 \\cdot 0 = 0\\]\\[2 \\cdot 0 = 0\\]\\[3 \\cdot 0 = 0\\]\\[...\\]<p>0으로 나눌수 있다고 가정을 하면</p>\\[1 = \\frac{0}{0}\\]\\[2 = \\frac{0}{0}\\]\\[3 = \\frac{0}{0}\\]<p>\\(1 \\neq 2 \\neq 3\\) 이므로 모순입니다</p><h1 id=\"varepsilon---delta-논법\">\\(\\varepsilon - \\delta\\) 논법</h1>\\[\\displaystyle{\\lim_{x \\to c} f(x) = L}\\]<p>을 증명하는 방법에 대해 이야기 해보겠습니다</p><h2 id=\"기본-원리\">기본 원리</h2><p>극한의 엄밀한 정리를 위해서는 \\(\\displaystyle{\\lim_{x \\to c} f(x) = L}\\) 이 \\(c\\)에 ‘충분히 가까운’ \\(x\\)를 선택했을때 \\(f(x)\\) 와 \\(L\\) 의 거리가 ‘선택한만큼 작은’ 값을 가져야합니다.</p><ul>  <li>Thomas’ Calculus</li></ul><h2 id=\"정의\">정의</h2><p>조건</p>\\[\\forall \\varepsilon &gt; 0\\]\\[\\owns \\delta = \\delta(\\varepsilon) &gt; 0\\]<p>일때</p>\\[\\left| x - c \\right| &lt; \\delta \\Longrightarrow \\left| f(x) - c \\right| &lt; \\varepsilon\\]<p>입니다.</p>",
            "url": "https://soulyi.io/2021/03/31/ap-calculus-2",
            
            
            
            
            
            "date_published": "2021-03-31T00:00:00+00:00",
            "date_modified": "2021-03-31T00:00:00+00:00",
            
                "author": 
                "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}"
                
            
        },
    
        {
            "id": "https://soulyi.io/2021/03/28/why-jekyll",
            "title": "내가 jekyll을 선택한 이유",
            "summary": "왜 jekyll인가?",
            "content_text": "많고 많은 블로그 플랫폼블로그 플랫폼의 춘추 전국 시대라고 불릴정도로 수많은 플랫폼들이 나와있습니다.제가 대표적으로 고려한 플랫폼들만 해도,      설치형 블로그          wordpress      jekyll      ghost      next.js 기반 (vercel 등 사용)      svelt 기반            서비스          velog      brunch      tistory      naver blog      medium      steemit      …이렇게 너무나도 많은 플랫폼들 사이에서 jekyll을 고르게 된 이유를 알려드리겠습니다.자율성서비스로 제공되는 플랫폼들에 비해 자율적으로 디자인, 수정이 가능합니다. LaTex 문법을 위해 사용하는 MathJax나, 태그 추가를 위해 사용하는 jekyll-tags 플러그인등 다른 서비스형 플랫폼에서는 생각도 할수없는 자율성을 제공합니다.커뮤니티jekyll은 next.js만큼 멋지진 않지만, 수많은 사람들이 사용해왔고, 지금도 사용하고 있는 만큼 다른 플랫폼들과 비교해 엄청난 커뮤니티가 존재하고, 거의 모든 케이스에 대해 솔루션이 존재합니다.무료github에 호스팅하면 무료로 사용 가능합니다. 평생.Markdown!기본적으로 makrdown을 사용하기때문에 머리아픈 wysiwyg을 다룰 필요가 없습니다!그럼에도 불구하고?next.js에서 제공하는 code splitting이나, SEO, i18n이 부럽고, jekyll 기본 documentation이 부실하다는게 아쉽지만, 충분히 사용자에 따라 보완할수 있다고 생각합니다.구조graph LR;    A[Github] --&gt; B[Github Actions];    B --&gt; C[jekyll-deploy-action];    C --&gt; D[CloudFlare];            Github Actions로 파일을 생성하고, Cloudflare를 사용해서 속도를 올리고 있습니다.",
            "content_html": "<h1 id=\"많고-많은-블로그-플랫폼\">많고 많은 블로그 플랫폼</h1><p>블로그 플랫폼의 춘추 전국 시대라고 불릴정도로 수많은 플랫폼들이 나와있습니다.제가 대표적으로 고려한 플랫폼들만 해도,</p><ul>  <li>    <p>설치형 블로그</p>    <ul>      <li>wordpress</li>      <li>jekyll</li>      <li>ghost</li>      <li>next.js 기반 (vercel 등 사용)</li>      <li>svelt 기반</li>    </ul>  </li>  <li>    <p>서비스</p>    <ul>      <li>velog</li>      <li>brunch</li>      <li>tistory</li>      <li>naver blog</li>      <li>medium</li>      <li>steemit</li>    </ul>  </li></ul><p>…이렇게 너무나도 많은 플랫폼들 사이에서 jekyll을 고르게 된 이유를 알려드리겠습니다.</p><h1 id=\"자율성\">자율성</h1><p>서비스로 제공되는 플랫폼들에 비해 자율적으로 디자인, 수정이 가능합니다. LaTex 문법을 위해 사용하는 MathJax나, 태그 추가를 위해 사용하는 jekyll-tags 플러그인등 다른 서비스형 플랫폼에서는 생각도 할수없는 자율성을 제공합니다.</p><h1 id=\"커뮤니티\">커뮤니티</h1><p>jekyll은 next.js만큼 멋지진 않지만, 수많은 사람들이 사용해왔고, 지금도 사용하고 있는 만큼 다른 플랫폼들과 비교해 엄청난 커뮤니티가 존재하고, 거의 모든 케이스에 대해 솔루션이 존재합니다.</p><h1 id=\"무료\">무료</h1><p>github에 호스팅하면 무료로 사용 가능합니다. 평생.</p><h1 id=\"markdown\">Markdown!</h1><p>기본적으로 makrdown을 사용하기때문에 머리아픈 wysiwyg을 다룰 필요가 없습니다!</p><h1 id=\"그럼에도-불구하고\">그럼에도 불구하고?</h1><p>next.js에서 제공하는 code splitting이나, SEO, i18n이 부럽고, jekyll 기본 documentation이 부실하다는게 아쉽지만, 충분히 사용자에 따라 보완할수 있다고 생각합니다.</p><h1 id=\"구조\">구조</h1><div class=\"mermaid\">graph LR;    A[Github] --&gt; B[Github Actions];    B --&gt; C[jekyll-deploy-action];    C --&gt; D[CloudFlare];            </div><p>Github Actions로 파일을 생성하고, Cloudflare를 사용해서 속도를 올리고 있습니다.</p>",
            "url": "https://soulyi.io/2021/03/28/why-jekyll",
            
            
            
            
            
            "date_published": "2021-03-28T00:00:00+00:00",
            "date_modified": "2021-03-28T00:00:00+00:00",
            
                "author": 
                "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}"
                
            
        },
    
        {
            "id": "https://soulyi.io/2021/03/24/ap-calculus",
            "title": "ap 미적분 정리 (1)",
            "summary": "ap 미적분 정리 (1)",
            "content_text": "용어 정리            word      뜻                  calculus      미적분학              inequalities      부등식              limits      극한              continuity      연속              keenly      예민하게              tangent      접선              secant      할선              parabola      포물선              ellipse      타원              identity function      항등 함수              constant function      상수 함수              uni step function      단위 계단 함수 (가우스 함수)              oscillation      진동              erratically      이상하게              bound      경계              theorem      정리              laws      법칙              common factors      공통 인자              denominator      분모              numerator      분자              interval      구간              precise      엄밀한              converse      역              inverse      이              logical equivalence      논리적 동치              contraposition      대우              disjuction      논리합              conjuction      논리곱              tautology      항진 명제              contradiction      모순 명제              integer      정수              assume      가정하다              even      짝수              odd      홀수      Theorems\\(\\bigtriangleup{ABC}\\) 의 결합 조건:\\(\\overline{BC}\\)가 가장 큰 변일때\\(\\overline{BC} &lt; \\overline{AB} + \\overline{AC}\\) 성립Triangle inequalities theorem(1)\\(-|a| \\leq a \\leq |a|\\)(2)\\(|a+b| \\leq |a| + |b|\\)(3)\\(|a-b| \\leq |a| + |b|\\)(4)\\(||a|-|b|| \\leq |a-b|\\)Special inequalities(1)\\(-|\\theta| \\leq sin\\theta \\leq |\\theta|\\)(2)\\(-|\\theta| \\leq 1 - cos \\theta \\leq |\\theta|\\)LogicLogical equivalence\\[P\\equiv{q}\\]\\[\\sim(\\sim p)\\equiv{p}\\]Disjunctionequivalent to ‘or’            \\(p\\)      \\(q\\)      \\(p \\lor q\\)              T      T      T              T      F      T              F      T      T              F      F      F      Conjuctionequivalent to ‘and’            \\(p\\)      \\(q\\)      \\(p \\wedge q\\)              T      T      T              T      F      F              F      T      F              F      F      F      De Morgan’s laws\\[\\sim(p \\wedge q) \\equiv {\\sim{p}\\lor\\sim{q}}\\]\\[\\sim(p \\lor q) \\equiv \\sim{p}\\wedge \\sim{q}\\]",
            "content_html": "<h1 id=\"용어-정리\">용어 정리</h1><table>  <thead>    <tr>      <th style=\"text-align: left\">word</th>      <th style=\"text-align: left\">뜻</th>    </tr>  </thead>  <tbody>    <tr>      <td style=\"text-align: left\">calculus</td>      <td style=\"text-align: left\">미적분학</td>    </tr>    <tr>      <td style=\"text-align: left\">inequalities</td>      <td style=\"text-align: left\">부등식</td>    </tr>    <tr>      <td style=\"text-align: left\">limits</td>      <td style=\"text-align: left\">극한</td>    </tr>    <tr>      <td style=\"text-align: left\">continuity</td>      <td style=\"text-align: left\">연속</td>    </tr>    <tr>      <td style=\"text-align: left\">keenly</td>      <td style=\"text-align: left\">예민하게</td>    </tr>    <tr>      <td style=\"text-align: left\">tangent</td>      <td style=\"text-align: left\">접선</td>    </tr>    <tr>      <td style=\"text-align: left\">secant</td>      <td style=\"text-align: left\">할선</td>    </tr>    <tr>      <td style=\"text-align: left\">parabola</td>      <td style=\"text-align: left\">포물선</td>    </tr>    <tr>      <td style=\"text-align: left\">ellipse</td>      <td style=\"text-align: left\">타원</td>    </tr>    <tr>      <td style=\"text-align: left\">identity function</td>      <td style=\"text-align: left\">항등 함수</td>    </tr>    <tr>      <td style=\"text-align: left\">constant function</td>      <td style=\"text-align: left\">상수 함수</td>    </tr>    <tr>      <td style=\"text-align: left\">uni step function</td>      <td style=\"text-align: left\">단위 계단 함수 (가우스 함수)</td>    </tr>    <tr>      <td style=\"text-align: left\">oscillation</td>      <td style=\"text-align: left\">진동</td>    </tr>    <tr>      <td style=\"text-align: left\">erratically</td>      <td style=\"text-align: left\">이상하게</td>    </tr>    <tr>      <td style=\"text-align: left\">bound</td>      <td style=\"text-align: left\">경계</td>    </tr>    <tr>      <td style=\"text-align: left\">theorem</td>      <td style=\"text-align: left\">정리</td>    </tr>    <tr>      <td style=\"text-align: left\">laws</td>      <td style=\"text-align: left\">법칙</td>    </tr>    <tr>      <td style=\"text-align: left\">common factors</td>      <td style=\"text-align: left\">공통 인자</td>    </tr>    <tr>      <td style=\"text-align: left\">denominator</td>      <td style=\"text-align: left\">분모</td>    </tr>    <tr>      <td style=\"text-align: left\">numerator</td>      <td style=\"text-align: left\">분자</td>    </tr>    <tr>      <td style=\"text-align: left\">interval</td>      <td style=\"text-align: left\">구간</td>    </tr>    <tr>      <td style=\"text-align: left\">precise</td>      <td style=\"text-align: left\">엄밀한</td>    </tr>    <tr>      <td style=\"text-align: left\">converse</td>      <td style=\"text-align: left\">역</td>    </tr>    <tr>      <td style=\"text-align: left\">inverse</td>      <td style=\"text-align: left\">이</td>    </tr>    <tr>      <td style=\"text-align: left\">logical equivalence</td>      <td style=\"text-align: left\">논리적 동치</td>    </tr>    <tr>      <td style=\"text-align: left\">contraposition</td>      <td style=\"text-align: left\">대우</td>    </tr>    <tr>      <td style=\"text-align: left\">disjuction</td>      <td style=\"text-align: left\">논리합</td>    </tr>    <tr>      <td style=\"text-align: left\">conjuction</td>      <td style=\"text-align: left\">논리곱</td>    </tr>    <tr>      <td style=\"text-align: left\">tautology</td>      <td style=\"text-align: left\">항진 명제</td>    </tr>    <tr>      <td style=\"text-align: left\">contradiction</td>      <td style=\"text-align: left\">모순 명제</td>    </tr>    <tr>      <td style=\"text-align: left\">integer</td>      <td style=\"text-align: left\">정수</td>    </tr>    <tr>      <td style=\"text-align: left\">assume</td>      <td style=\"text-align: left\">가정하다</td>    </tr>    <tr>      <td style=\"text-align: left\">even</td>      <td style=\"text-align: left\">짝수</td>    </tr>    <tr>      <td style=\"text-align: left\">odd</td>      <td style=\"text-align: left\">홀수</td>    </tr>  </tbody></table><h1 id=\"theorems\">Theorems</h1><p>\\(\\bigtriangleup{ABC}\\) 의 결합 조건:</p><p>\\(\\overline{BC}\\)가 가장 큰 변일때\\(\\overline{BC} &lt; \\overline{AB} + \\overline{AC}\\) 성립</p><h2 id=\"triangle-inequalities-theorem\">Triangle inequalities theorem</h2><p>(1)\\(-|a| \\leq a \\leq |a|\\)</p><p>(2)\\(|a+b| \\leq |a| + |b|\\)</p><p>(3)\\(|a-b| \\leq |a| + |b|\\)</p><p>(4)\\(||a|-|b|| \\leq |a-b|\\)</p><h2 id=\"special-inequalities\">Special inequalities</h2><p>(1)\\(-|\\theta| \\leq sin\\theta \\leq |\\theta|\\)</p><p>(2)\\(-|\\theta| \\leq 1 - cos \\theta \\leq |\\theta|\\)</p><h1 id=\"logic\">Logic</h1><h2 id=\"logical-equivalence\">Logical equivalence</h2>\\[P\\equiv{q}\\]\\[\\sim(\\sim p)\\equiv{p}\\]<h2 id=\"disjunction\">Disjunction</h2><p>equivalent to ‘or’</p><table>  <tbody>    <tr>      <td>\\(p\\)</td>      <td>\\(q\\)</td>      <td>\\(p \\lor q\\)</td>    </tr>    <tr>      <td>T</td>      <td>T</td>      <td>T</td>    </tr>    <tr>      <td>T</td>      <td>F</td>      <td>T</td>    </tr>    <tr>      <td>F</td>      <td>T</td>      <td>T</td>    </tr>    <tr>      <td>F</td>      <td>F</td>      <td>F</td>    </tr>  </tbody></table><h2 id=\"conjuction\">Conjuction</h2><p>equivalent to ‘and’</p><table>  <tbody>    <tr>      <td>\\(p\\)</td>      <td>\\(q\\)</td>      <td>\\(p \\wedge q\\)</td>    </tr>    <tr>      <td>T</td>      <td>T</td>      <td>T</td>    </tr>    <tr>      <td>T</td>      <td>F</td>      <td>F</td>    </tr>    <tr>      <td>F</td>      <td>T</td>      <td>F</td>    </tr>    <tr>      <td>F</td>      <td>F</td>      <td>F</td>    </tr>  </tbody></table><h2 id=\"de-morgans-laws\">De Morgan’s laws</h2>\\[\\sim(p \\wedge q) \\equiv {\\sim{p}\\lor\\sim{q}}\\]\\[\\sim(p \\lor q) \\equiv \\sim{p}\\wedge \\sim{q}\\]",
            "url": "https://soulyi.io/2021/03/24/ap-calculus",
            
            
            
            
            
            "date_published": "2021-03-24T00:00:00+00:00",
            "date_modified": "2021-03-24T00:00:00+00:00",
            
                "author": 
                "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}"
                
            
        },
    
        {
            "id": "https://soulyi.io/2021/03/14/deploying-products",
            "title": "개인프로젝트 개발, 배포, 수익화까지",
            "summary": "개인프로젝트 개발, 배포 과정",
            "content_text": "개인 프로젝트는 속도가 중요하지만, 제가 생각하기엔 더 중요하다고 생각하는점은 안정적 배포와 마케팅입니다. 대부분의 사용자들은 처음 웹사이트/앱을 접했을때에 완벽한 모습을 보지 못하면 다시 기회를 주지 않거든요. 그래서 UX를 한층 올려주는 배포, 마케팅에 대해 말해보겠습니다.이 글에서는 주로 웹관련 기술에 대해 이야기하지만, 앱 관련 내용도 있습니다.아래 내용은 제 개인적생각들이지만, 개발자분들이 보고 참고하는 내용으로 삼아주시면 감사하겠습니다.프로젝트 소개우선 제가 만든 세가지 프로젝트에 대해 소개해드리겠습니다.chekly - 자가진단 자동화사용스택  jQuery + plainJS  redis  mariaDB  AWS Lightsail  FlaskGithub: lill74/chekly_publicissue-finder - 핵토버페스트 issue 찾기사용스택  ReactJS  MongoDB  AWS Lightsail  FlaskGithub: lill74/issue-finderprimeNet - 대통령 임기 보기사용스택  NextJSGithub: lill74/primeNet개발제가 생각하기에 개발 과정에서 가장 중점으로 둬야할건, 개발자의 편의가 아니라, 내 아이디어를 중심으로 UX를 개선하는것이라고 생각합니다. 많은 개발자들이 착각하는데, 더 좋은 기술 스택, 좋은 언어를 사용하는것보다 우선순위는 UX입니다.UX는 디자인부터, 설계까지 모든 분야야로 아우를수 있는데 대표적인 레퍼런스로디자인UI 폼 디자인의 모든 것(1부) - brunchUI 폼 디자인의 모든 것(2부) - brunch버튼 색상 적용 UX 가이드 - brunch속도성능 최적화 - TOAST UI위 내용들을 추천드립니다.설계보안  HTTPS 지원  개인정보 처리 방침 생성기  VPN을 이용해 SSH 사용하기개인정보 처리 방침은 의무이지만, 이 내용을 생략하시는 분들이 많이 있습니다. 개인정보를 처리하는 프로젝트의 경우 개인정보 처리 방침, 개인정보 처리 담당자 연락처등의 내용을 넣는것을 추천드립니다. 사용자가 이 웹사이트를 믿어도 되나? 를 결정하는데에 중요한 Factor로 작용하기도 합니다.배포클라우드AWS Lightsail방화벽, SSH, 보안설정등 다양한 설정을 진행해야되서 배포 속도가 느리지만, 그럼에도 불구하고 개인 개발자가 개발하면서 사용하기 좋은 플랫폼이라고 생각합니다.HerokuAWS의 장점을 다 덮지만, 무료 티어는 너무 불편합니다.Serverless정적 페이지 호스팅Vercel, netlify둘다 개인 개발자는 무료로 사용할수 있지만, UI나 트래픽 폭이 널널한 Vercel을 추천드립니다.Github pages홍보랜딩페이지랜딩페이지의 디자인도 유저가 웹사이트를 사용할지 생각하게 하는 중요한 Factor중 하나입니다. 홍보 URL을 생성할때는, 랜딩페이지로 직접 트래픽이 들어오게 하고, 그 랜딩페이지에서 서비스 페이지로 redirect하는 방식을 추천드립니다.휴대폰 목업 생성  구글에서 Landing page templets 를 검색해보세요.개발자 커뮤니티개발자 커뮤니티는 새로운 제품을 소개하기 가장 좋은 플랫폼중 하나입니다. 개발자라는 특성상 새로운 제품에 거부감이 덜하고, 온라인 활동을 많이 하는 사람들을 타게팅 할수 있습니다. 초기 홍보에 추천드립니다. 각 커뮤니티별 특성이 다르니 고려해서 홍보하는것을 추천드립니다.GeekNews생활코딩 - Facebook코딩이랑 무관합니다만, - Facebook프로그래밍 갤러리 - dcinside공유 버튼개인적으로 생각하기에 요즘 누가 공유버튼을 쓰겠어? 라는 생각을 했지만 제 웹사이트들에서 들어오는 트래픽의 30%정도가 공유 버튼을 이용해서 들어오고 있었습니다. 꼭 다는것을 추천 드립니다.SEO 등록, 최적화OG Tag, 썸네일, Favicon페이스북 공유 디버거모니터링사실상 DevOps가 하는 일과 비슷합니다.DevOps 팀을 위한 모니터링 팁 - RIDISentryredis, flask등 에러 로그 관리를 도와줍니다.Uptime Robot유저들이 링크를 눌렀을때 반응하지 않는것만큼 싫어하는 일은 없을겁니다.CrontiorCron job을 실행하고, 실패시 Notifcation을 제공하는 프로그램입니다.사후 보고AnalyticsGoogle AnalyticsFacebook AnalyticsGIF 사용랜딩페이지에 GIF영상을 넣으면수익화Google Adsense, Admob한국에서 가장 광고 단가가 높은 편이지만, 해외 트래픽에 대한 광고 단가가 정말 높습니다. 하지만 요즘 대부분의 사용자가 광고 차단 플러그인을 사용해서 트래픽에 비해 광고 수익은 정말 적습니다, 그와 반대로 Admob은 트래픽만큼 들어옵니다.기타 광고 플랫폼  Kakao Adfit (한국)  dable (한국)후원 플랫폼  Twip (한국)  Paypal  Buy me a coffe앱 vs 웹 특징웹은 초기 홍보가 가장 중요합니다. 그에 반해 앱은 플레이 스토어, 앱스토어라는 플랫폼에 종속 되어있어서 제목, 태그, 설명등의 설정이 중요합니다.",
            "content_html": "<p>개인 프로젝트는 속도가 중요하지만, 제가 생각하기엔 더 중요하다고 생각하는점은 <strong>안정적 배포와 마케팅</strong>입니다. 대부분의 사용자들은 처음 웹사이트/앱을 접했을때에 완벽한 모습을 보지 못하면 다시 기회를 주지 않거든요. 그래서 UX를 한층 올려주는 배포, 마케팅에 대해 말해보겠습니다.</p><p>이 글에서는 주로 웹관련 기술에 대해 이야기하지만, 앱 관련 내용도 있습니다.</p><p>아래 내용은 제 개인적생각들이지만, 개발자분들이 보고 참고하는 내용으로 삼아주시면 감사하겠습니다.</p><h1 id=\"프로젝트-소개\">프로젝트 소개</h1><p>우선 제가 만든 세가지 프로젝트에 대해 소개해드리겠습니다.</p><h2 id=\"chekly---자가진단-자동화\">chekly - 자가진단 자동화</h2><p>사용스택</p><ul>  <li>jQuery + plainJS</li>  <li>redis</li>  <li>mariaDB</li>  <li>AWS Lightsail</li>  <li>Flask</li></ul><p><a href=\"https://github.com/lill74/chekly_public\">Github: lill74/chekly_public</a></p><h2 id=\"issue-finder---핵토버페스트-issue-찾기\">issue-finder - 핵토버페스트 issue 찾기</h2><p>사용스택</p><ul>  <li>ReactJS</li>  <li>MongoDB</li>  <li>AWS Lightsail</li>  <li>Flask</li></ul><p><a href=\"https://github.com/lill74/issue-finder\">Github: lill74/issue-finder</a></p><h2 id=\"primenet---대통령-임기-보기\">primeNet - 대통령 임기 보기</h2><p>사용스택</p><ul>  <li>NextJS</li></ul><p><a href=\"https://github.com/lill74/primeNet\">Github: lill74/primeNet</a></p><h1 id=\"개발\">개발</h1><p>제가 생각하기에 개발 과정에서 가장 중점으로 둬야할건, 개발자의 편의가 아니라, 내 아이디어를 중심으로 <strong>UX를 개선하는것이라고 생각합니다</strong>. 많은 개발자들이 착각하는데, 더 좋은 기술 스택, 좋은 언어를 사용하는것보다 우선순위는 UX입니다.</p><p>UX는 디자인부터, 설계까지 모든 분야야로 아우를수 있는데 대표적인 레퍼런스로</p><h3 id=\"디자인\">디자인</h3><p><a href=\"https://brunch.co.kr/@thinkaboutlove/262\">UI 폼 디자인의 모든 것(1부) - brunch</a><a href=\"https://brunch.co.kr/@thinkaboutlove/267\">UI 폼 디자인의 모든 것(2부) - brunch</a><a href=\"https://brunch.co.kr/@ebprux/205\">버튼 색상 적용 UX 가이드 - brunch</a></p><h3 id=\"속도\">속도</h3><p><a href=\"https://ui.toast.com/fe-guide/ko_PERFORMANCE\">성능 최적화 - TOAST UI</a></p><p>위 내용들을 추천드립니다.</p><h3 id=\"설계\">설계</h3><h4 id=\"보안\">보안</h4><ul>  <li>HTTPS 지원</li>  <li><a href=\"https://www.privacy.go.kr/a3sc/per/inf/perInfStep01.do\">개인정보 처리 방침 생성기</a></li>  <li>VPN을 이용해 SSH 사용하기</li></ul><p>개인정보 처리 방침은 의무이지만, 이 내용을 생략하시는 분들이 많이 있습니다. 개인정보를 처리하는 프로젝트의 경우 개인정보 처리 방침, 개인정보 처리 담당자 연락처등의 내용을 넣는것을 추천드립니다. 사용자가 <strong>이 웹사이트를 믿어도 되나?</strong> 를 결정하는데에 중요한 Factor로 작용하기도 합니다.</p><h1 id=\"배포\">배포</h1><h2 id=\"클라우드\">클라우드</h2><h3 id=\"aws-lightsail\">AWS Lightsail</h3><p>방화벽, SSH, 보안설정등 다양한 설정을 진행해야되서 배포 속도가 느리지만, 그럼에도 불구하고 개인 개발자가 개발하면서 사용하기 좋은 플랫폼이라고 생각합니다.</p><h3 id=\"heroku\">Heroku</h3><p>AWS의 장점을 다 덮지만, 무료 티어는 너무 불편합니다.</p><h3 id=\"serverless\">Serverless</h3><h2 id=\"정적-페이지-호스팅\">정적 페이지 호스팅</h2><h3 id=\"vercel-netlify\">Vercel, netlify</h3><p>둘다 개인 개발자는 무료로 사용할수 있지만, UI나 트래픽 폭이 널널한 Vercel을 추천드립니다.</p><h3 id=\"github-pages\">Github pages</h3><h1 id=\"홍보\">홍보</h1><h3 id=\"랜딩페이지\">랜딩페이지</h3><p>랜딩페이지의 디자인도 유저가 웹사이트를 사용할지 생각하게 하는 중요한 Factor중 하나입니다. 홍보 URL을 생성할때는, 랜딩페이지로 직접 트래픽이 들어오게 하고, 그 랜딩페이지에서 서비스 페이지로 redirect하는 방식을 추천드립니다.</p><p><a href=\"https://mockuphone.com/\">휴대폰 목업 생성</a></p><ul>  <li>구글에서 Landing page templets 를 검색해보세요.</li></ul><h3 id=\"개발자-커뮤니티\">개발자 커뮤니티</h3><p>개발자 커뮤니티는 새로운 제품을 소개하기 가장 좋은 플랫폼중 하나입니다. 개발자라는 특성상 새로운 제품에 거부감이 덜하고, 온라인 활동을 많이 하는 사람들을 타게팅 할수 있습니다. 초기 홍보에 추천드립니다. 각 커뮤니티별 특성이 다르니 고려해서 홍보하는것을 추천드립니다.</p><p><a href=\"https://news.hada.io/\">GeekNews</a><a href=\"https://www.facebook.com/groups/codingeverybody/\">생활코딩 - Facebook</a><a href=\"https://www.facebook.com/groups/System.out.Coding/\">코딩이랑 무관합니다만, - Facebook</a><a href=\"https://gall.dcinside.com/board/lists?id=programming\">프로그래밍 갤러리 - dcinside</a></p><h3 id=\"공유-버튼\">공유 버튼</h3><p>개인적으로 생각하기에 요즘 누가 공유버튼을 쓰겠어? 라는 생각을 했지만 제 웹사이트들에서 들어오는 트래픽의 30%정도가 공유 버튼을 이용해서 들어오고 있었습니다. 꼭 다는것을 추천 드립니다.</p><h3 id=\"seo-등록-최적화\">SEO 등록, 최적화</h3><h3 id=\"og-tag-썸네일-favicon\">OG Tag, 썸네일, Favicon</h3><p><a href=\"https://developers.facebook.com/tools/debug/\">페이스북 공유 디버거</a></p><h1 id=\"모니터링\">모니터링</h1><p>사실상 DevOps가 하는 일과 비슷합니다.<a href=\"https://www.ridicorp.com/story/monitoring-howto/\">DevOps 팀을 위한 모니터링 팁 - RIDI</a></p><h2 id=\"sentry\">Sentry</h2><p>redis, flask등 에러 로그 관리를 도와줍니다.</p><h2 id=\"uptime-robot\">Uptime Robot</h2><p>유저들이 링크를 눌렀을때 반응하지 않는것만큼 싫어하는 일은 없을겁니다.</p><h2 id=\"crontior\"><a href=\"https://cronitor.io/\">Crontior</a></h2><p>Cron job을 실행하고, 실패시 Notifcation을 제공하는 프로그램입니다.</p><h1 id=\"사후-보고\">사후 보고</h1><h2 id=\"analytics\">Analytics</h2><h3 id=\"google-analytics\">Google Analytics</h3><h3 id=\"facebook-analytics\">Facebook Analytics</h3><h3 id=\"gif-사용\">GIF 사용</h3><p>랜딩페이지에 GIF영상을 넣으면</p><h1 id=\"수익화\">수익화</h1><h2 id=\"google-adsense-admob\">Google Adsense, Admob</h2><p>한국에서 가장 광고 단가가 높은 편이지만, 해외 트래픽에 대한 광고 단가가 정말 높습니다. 하지만 요즘 대부분의 사용자가 광고 차단 플러그인을 사용해서 트래픽에 비해 광고 수익은 정말 적습니다, 그와 반대로 Admob은 트래픽만큼 들어옵니다.</p><h2 id=\"기타-광고-플랫폼\">기타 광고 플랫폼</h2><ul>  <li>Kakao Adfit (한국)</li>  <li>dable (한국)</li></ul><h2 id=\"후원-플랫폼\">후원 플랫폼</h2><ul>  <li>Twip (한국)</li>  <li>Paypal</li>  <li>Buy me a coffe</li></ul><h1 id=\"앱-vs-웹-특징\">앱 vs 웹 특징</h1><p>웹은 초기 홍보가 가장 중요합니다. 그에 반해 앱은 플레이 스토어, 앱스토어라는 플랫폼에 종속 되어있어서 제목, 태그, 설명등의 설정이 중요합니다.</p>",
            "url": "https://soulyi.io/2021/03/14/deploying-products",
            
            
            
            
            
            "date_published": "2021-03-14T00:00:00+00:00",
            "date_modified": "2021-03-14T00:00:00+00:00",
            
                "author": 
                "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}"
                
            
        },
    
        {
            "id": "https://soulyi.io/2021/02/28/coding-test",
            "title": "나만의 코딩테스트 준비 방법",
            "summary": "알고리즘 백준 공부 순서",
            "content_text": "알고리즘 공부를 하다보면 막막합니다. 대체 뭘 풀어야 할지 잘 모르겠고,그럴때마다 제가본 자료들을 공유해보고싶습니다.취업을 위한 코딩테스트 공부방법우선 저 글을 읽으며 거시적인 길을 잡고solved.acsolved.ac에 가입해서 문제 - Class 에 있는 Class별 문제를 풀어봅니다.알고리즘 문제풀이(PS) 시작하기그리고 이 글을 읽어보면서 문제를 풀어봅니다. (이 아래에 있는 링크들은 plzrun님의 문제들을 모아서 만든 문제집입니다.)입출력DP이런 저런 문제들그래프이분탐색/삼분탐색분할정복그리디완전탐색문제들을 풀면서 갓동빈님의 실전 알고리즘 강의도 틈틈히 듣습니다.실전 알고리즘이정도면 재미있게 알고리즘 공부를 해볼수 있을것 같습니다.",
            "content_html": "<p>알고리즘 공부를 하다보면 막막합니다. 대체 뭘 풀어야 할지 잘 모르겠고,그럴때마다 제가본 자료들을 공유해보고싶습니다.</p><p><a href=\"https://covenant.tistory.com/220\">취업을 위한 코딩테스트 공부방법</a></p><p>우선 저 글을 읽으며 거시적인 길을 잡고</p><p><a href=\"https://solved.ac\">solved.ac</a></p><p>solved.ac에 가입해서 문제 - Class 에 있는 Class별 문제를 풀어봅니다.</p><p><a href=\"https://plzrun.tistory.com/entry/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4PS-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">알고리즘 문제풀이(PS) 시작하기</a></p><p>그리고 이 글을 읽어보면서 문제를 풀어봅니다. (이 아래에 있는 링크들은 plzrun님의 문제들을 모아서 만든 문제집입니다.)</p><p><a href=\"https://www.acmicpc.net/workbook/view/7213\">입출력</a><a href=\"https://www.acmicpc.net/workbook/view/7214\">DP</a><a href=\"https://www.acmicpc.net/workbook/view/7215\">이런 저런 문제들</a><a href=\"https://www.acmicpc.net/workbook/view/7216\">그래프</a><a href=\"https://www.acmicpc.net/workbook/view/7217\">이분탐색/삼분탐색</a><a href=\"https://www.acmicpc.net/workbook/view/7218\">분할정복</a><a href=\"https://www.acmicpc.net/workbook/view/7219\">그리디</a><a href=\"https://www.acmicpc.net/workbook/view/7220\">완전탐색</a></p><p>문제들을 풀면서 갓동빈님의 실전 알고리즘 강의도 틈틈히 듣습니다.</p><p><a href=\"https://www.youtube.com/watch?v=qQ5iLNjpxSk&amp;list=PLRx0vPvlEmdDHxCvAQS1_6XV4deOwfVrz\">실전 알고리즘</a></p><p>이정도면 재미있게 알고리즘 공부를 해볼수 있을것 같습니다.</p>",
            "url": "https://soulyi.io/2021/02/28/coding-test",
            
            
            
            
            
            "date_published": "2021-02-28T00:00:00+00:00",
            "date_modified": "2021-02-28T00:00:00+00:00",
            
                "author": 
                "{"name"=>nil, "avatar"=>nil, "email"=>"alus20x@gmail.com", "url"=>nil}"
                
            
        }
    
    ]
}